(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{318:function(e,t,a){e.exports=a.p+"assets/img/app_home.86aecc4f.png"},319:function(e,t,a){e.exports=a.p+"assets/img/app_contacts.5add1a21.png"},320:function(e,t,a){e.exports=a.p+"assets/img/app_stats.76b9a17b.png"},321:function(e,t,a){e.exports=a.p+"assets/img/aks_arch.fce77127.png"},751:function(e,t,a){e.exports=a.p+"assets/img/app_contact_details.0743224b.png"},752:function(e,t,a){e.exports=a.p+"assets/img/acr_portal.a34c031e.png"},753:function(e,t,a){e.exports=a.p+"assets/img/monitoring_map.4f783279.png"},754:function(e,t,a){e.exports=a.p+"assets/img/monitoring_error.84405fd4.png"},755:function(e,t,a){e.exports=a.p+"assets/img/monitoring_performance.0cd6a32f.png"},756:function(e,t,a){e.exports=a.p+"assets/img/monitoring_userevents.48f6cb58.png"},757:function(e,t,a){e.exports=a.p+"assets/img/monitoring_end2end.27448a3c.png"},758:function(e,t,a){e.exports=a.p+"assets/img/monitoring_dashboard.c32d4881.png"},839:function(e,t,a){"use strict";a.r(t);var s=a(42),n=Object(s.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"deploy-a-microservice-oriented-sample-application"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#deploy-a-microservice-oriented-sample-application"}},[e._v("#")]),e._v(" Deploy a microservice-oriented sample application")]),e._v(" "),s("h2",{attrs:{id:"goal-architecture"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#goal-architecture"}},[e._v("#")]),e._v(" Goal / Architecture")]),e._v(" "),s("p",[e._v('We have been working with the Contacts API now for some time, let\'s deploy the "full-blown" Simple Contacts Management (SCM) app to your Kubernetes cluster. To give you an impression how this will look like in the end, here are some screenshots:')]),e._v(" "),s("p",[s("img",{attrs:{src:a(318),alt:"app_home"}}),e._v(" "),s("img",{attrs:{src:a(319),alt:"app_contacts"}}),e._v(" "),s("img",{attrs:{src:a(751),alt:"app_contacts_details"}}),e._v(" "),s("img",{attrs:{src:a(320),alt:"app_stats"}})]),e._v(" "),s("p",[e._v("The application is capable managing contacts and visit reports via a modern, responsive UI that is written in "),s("a",{attrs:{href:"https://vuejs.org",target:"_blank",rel:"noopener noreferrer"}},[e._v("VueJS"),s("OutboundLink")],1),e._v(". It makes use of several Azure services to have a good UX, e.g. indexing contacts in an "),s("a",{attrs:{href:"https://docs.microsoft.com/en-us/azure/search/search-what-is-azure-search",target:"_blank",rel:"noopener noreferrer"}},[e._v("Azure Search service"),s("OutboundLink")],1),e._v(" to give users the possiblity to search for contacts anywhere in the app, send visit report results to an "),s("a",{attrs:{href:"https://docs.microsoft.com/en-us/azure/cognitive-services/text-analytics/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Azure Congitive Service"),s("OutboundLink")],1),e._v(' instance to analyze the sentiment of the result description etc. We also followed a "microservice" approach by giving each service its own data store ('),s("a",{attrs:{href:"https://docs.microsoft.com/en-us/azure/azure-sql/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Azure SQL DB"),s("OutboundLink")],1),e._v(" for contacts service, "),s("a",{attrs:{href:"https://docs.microsoft.com/en-us/azure/cosmos-db/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Cosmos DB"),s("OutboundLink")],1),e._v(" for visit reports service etc.). Under the hood, services communicate with each other by sending messages over an "),s("a",{attrs:{href:"https://docs.microsoft.com/en-us/azure/service-bus-messaging/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Azure Service Bus"),s("OutboundLink")],1),e._v(' instance via several topics so that we can guarantee that each services operates on its own. Some of these messages are also handled by "background/daemon"-services which we implemented by using the '),s("a",{attrs:{href:"https://docs.microsoft.com/en-us/azure/azure-functions/functions-create-function-linux-custom-image?tabs=bash%2Cportal&pivots=programming-language-csharp",target:"_blank",rel:"noopener noreferrer"}},[e._v("Azure Functions runtime"),s("OutboundLink")],1),e._v(" - yes, you can host Azure Functions via Docker containers!")]),e._v(" "),s("p",[e._v("That said, we are also following the best practice to push all possible state of the application out of your cluster. That means, we won't host any database within the cluster. Stateless clusters are much easier to manage!")]),e._v(" "),s("p",[e._v("This is how the architecture looks like after deploying Azure and in-cluster services:")]),e._v(" "),s("p",[s("img",{attrs:{src:a(321),alt:"architecture"}})]),e._v(" "),s("h2",{attrs:{id:"terraform-deploy-azure-infrastructure"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#terraform-deploy-azure-infrastructure"}},[e._v("#")]),e._v(" Terraform / Deploy Azure Infrastructure")]),e._v(" "),s("p",[e._v("To create the Azure infrastructure, we are using "),s("a",{attrs:{href:"https://www.terraform.io/",target:"_blank",rel:"noopener noreferrer"}},[e._v("Terraform"),s("OutboundLink")],1),e._v(', a very popular tool in the "Infrastructure-as-Code" space. If you haven\'t installed it already, please follow the official tutorial: '),s("a",{attrs:{href:"https://www.terraform.io/downloads.html",target:"_blank",rel:"noopener noreferrer"}},[e._v("https://www.terraform.io/downloads.html"),s("OutboundLink")],1),e._v(".")]),e._v(" "),s("p",[e._v("If you have successfully installed Terrraform CLI, let's create the Azure service, we need. Go to folder "),s("code",[e._v("day7/challenges/samples/challenge-4/0_tf")]),e._v(" and open the file "),s("code",[e._v("variables.tf")]),e._v(". You need to adjust a few settings:")]),e._v(" "),s("ul",[s("li",[e._v("default vaule of "),s("code",[e._v("location")]),e._v(" - choose the same location as your AKS cluster to create all services in the same location")]),e._v(" "),s("li",[e._v("default value of "),s("code",[e._v("prefix")]),e._v(" - we use a prefix to have consitent naming of services. Please choose one that fits for you, but be careful to NOT use more than 6 characters for it.")])]),e._v(" "),s("p",[e._v("You can leave all other variables with their default values. The file should then look similar to that:")]),e._v(" "),s("div",{staticClass:"language-tf extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('variable "location" {\n  type    = string\n  default = "westeurope"\n}\n\nvariable "prefix" {\n  type    = string\n  default = "mydcd7"\n  validation {\n    condition     = length(var.prefix) <= 6\n    error_message = "The prefix value must not be longer than 6 characters."\n  }\n}\n\nvariable "env" {\n  type    = string\n  default = "dev"\n}\n\nvariable "cosmosdbname" {\n  type    = string\n  default = "scmvisitreports"\n}\n\nvariable "cosmoscontainername" {\n  type    = string\n  default = "visitreports"\n}\n\nvariable "sqldbusername" {\n  type    = string\n  default = "adcsqladmin"\n}\n\nvariable "sqldbpassword" {\n  type    = string\n  default = "Ch@ngeMe!123!"\n}\n')])])]),s("p",[e._v("After adjusting the file, you can execute the following commands (in folder "),s("code",[e._v("day7/challenges/samples/challenge-4/0_tf")]),e._v("):")]),e._v(" "),s("div",{staticClass:"language-zsh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$ terraform init\n$ terraform apply\n# Answer with 'yes' when asked, that the changes will be applied.\n")])])]),s("blockquote",[s("p",[s("strong",[e._v("Note:")]),e._v(" If you get an error because of the validation section in the "),s("code",[e._v("variables.tf")]),e._v(" file, you probably used an older version of "),s("code",[e._v("terraform")]),e._v(". If you don't want to update to a newer version, just remove that section.")])]),e._v(" "),s("p",[s("strong",[e._v("This will take up to 20 minutes to finish")]),e._v(" - grab a coffee ðŸ˜ƒ and after the script has successfully finished, save the variables/secrets from Azure to a file:")]),e._v(" "),s("div",{staticClass:"language-zsh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$ terraform output > azure_output.txt\n")])])]),s("h2",{attrs:{id:"create-a-new-kubernetes-namespace"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#create-a-new-kubernetes-namespace"}},[e._v("#")]),e._v(" Create a new Kubernetes Namespace")]),e._v(" "),s("p",[e._v("We will put our application into a namespace called "),s("code",[e._v("contactsapp")]),e._v(". Let's create it:")]),e._v(" "),s("div",{staticClass:"language-zsh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$ kubectl create ns contactsapp\n\nnamespace/contactsapp created\n")])])]),s("p",[e._v("We set the new namespace as the current "),s("em",[e._v("default one")]),e._v(". Otherwise, we would always have to append "),s("code",[e._v("--namespace contactsapp")]),e._v(" to our commands.")]),e._v(" "),s("div",{staticClass:"language-zsh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$ kubectl config set-context --current --namespace=contactsapp\n\nContext \"adc-cluster\" modified.\n\n# to reset the namespace later back to 'default', use 'kubectl config set-context --current --namespace=default'\n")])])]),s("h2",{attrs:{id:"deploy-configuration-secrets"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#deploy-configuration-secrets"}},[e._v("#")]),e._v(" Deploy Configuration / Secrets")]),e._v(" "),s("p",[e._v("Now we have to create two configuration objects that we use to read the Azure configuration within the Kubernetes cluster: a "),s("code",[e._v("Secret")]),e._v(" and a "),s("code",[e._v("ConfigMap")]),e._v(".")]),e._v(" "),s("p",[e._v("Go to "),s("code",[e._v("day7/challenges/samples/challenge-4/1_config")]),e._v(" and replace the placeholders "),s("code",[e._v("#{var_name}#")]),e._v(" in the file "),s("code",[e._v("secrets.yaml")]),e._v(" with the corresponding value from the "),s("code",[e._v("azure_output.txt")]),e._v(" file.")]),e._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" v1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" Secret\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" scmsecrets\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("type")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" Opaque\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("'APPINSIGHTSKEY'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'#{appinsights_base64}#'")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("'CONTACTSLISTENCONNSTR'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'#{contacts_listen_connectionstring_base64}#'")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("'CONTACTSLISTENENTITYCONNSTR'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'#{contacts_listen_with_entity_connectionstring_base64}#'")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("'CONTACTSSENDCONNSTR'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'#{contacts_send_connectionstring_base64}#'")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("'COSMOSENDPOINT'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'#{cosmos_endpoint_base64}#'")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("'COSMOSPRIMARYKEY'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'#{cosmos_primary_master_key_base64}#'")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("'RESOURCESCONNECTIONSTRING'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'#{resources_primary_connection_string_base64}#'")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("'FUNCTIONSCONNECTIONSTRING'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'#{funcs_primary_connection_string_base64}#'")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("'SEARCHNAME'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'#{search_name_base64}#'")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("'SEARCHPRIMARYKEY'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'#{search_primary_key_base64}#'")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("'SQLDBCONNECTIONSTRING'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'#{sqldb_connectionstring_base64}#'")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("'TAENDPOINT'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'#{textanalytics_endpoint_base64}#'")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("'TAKEY'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'#{textanalytics_key_base64}#'")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("'THUMBNAILLISTENCONNSTR'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'#{thumbnail_listen_connectionstring_base64}#'")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("'THUMBNAILSENDCONNSTR'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'#{thumbnail_send_connectionstring_base64}#'")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("'VRLISTENCONNSTR'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'#{visitreports_listen_connectionstring_base64}#'")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("'VRSENDCONNSTR'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'#{visitreports_send_connectionstring_base64}#'")]),e._v("\n")])])]),s("p",[s("strong",[e._v("IMPORTANT:")]),e._v(" The value of a variable should "),s("strong",[e._v("not contain")]),e._v(" the opening/closing tags anymore, e.g. "),s("code",[e._v("'APPINSIGHTSKEY': '1234567890'")]),e._v(".")]),e._v(" "),s("p",[e._v("Do the same with the file "),s("code",[e._v("configmap.yaml")]),e._v(".")]),e._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("kind")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" ConfigMap\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("apiVersion")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" v1\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("metadata")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("name")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" uisettings\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("data")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v("\n  "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("settings.js")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("|")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("-")]),e._v("\n    var uisettings = "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("{")]),e._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("endpoint")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'http://#{YOUR_HOST_NAME}#/api/contacts/'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("resourcesEndpoint")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'http://#{YOUR_HOST_NAME}#/api/resources/'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("searchEndpoint")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'http://#{YOUR_HOST_NAME}#/api/search/'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("reportsEndpoint")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'http://#{YOUR_HOST_NAME}#/api/visitreports/'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("enableStats")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[e._v("true")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n      "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[e._v("aiKey")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(":")]),e._v(" "),s("span",{pre:!0,attrs:{class:"token string"}},[e._v("'#{appinsights}#'")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v(",")]),e._v("\n    "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[e._v("}")]),e._v("\n")])])]),s("p",[e._v("The variable "),s("code",[e._v("YOUR_HOST_NAME")]),e._v(" should be the "),s("code",[e._v("nip.io")]),e._v(" adress for your ingress controller you used before, e.g. "),s("code",[e._v("20-67-122-249.nip.io")]),e._v(" in our case here. And "),s("strong",[e._v("be careful")]),e._v(", in this "),s("code",[e._v("ConfigMap")]),e._v(" the AppInsights Key ("),s("code",[e._v("aiKey")]),e._v(") is "),s("strong",[e._v("NOT")]),e._v(" the base64-encoded one!")]),e._v(" "),s("p",[e._v("Please apply both files to your cluster:")]),e._v(" "),s("div",{staticClass:"language-zsh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$ kubectl apply -f configmap.yaml\nconfigmap/uisettings created\n\n$ kubectl apply -f secrets.yaml\nsecret/scmsecrets created\n")])])]),s("h2",{attrs:{id:"build-all-required-docker-images"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#build-all-required-docker-images"}},[e._v("#")]),e._v(" Build all required Docker images")]),e._v(" "),s("p",[e._v("Now we need to build all Docker images for our application. In total, we will have 8 images in our repository after this task. BTW, for conveniance reasons, we build all images in the container registry!")]),e._v(" "),s("p",[e._v("Now, build all the required images one by one...of course, replace "),s("code",[e._v("<ACR_NAME>")]),e._v(" with the name of your container registry.")]),e._v(" "),s("ol",[s("li",[e._v("Contacts API: Folder "),s("code",[e._v("day7/apps/dotnetcore/Scm")]),e._v(":")])]),e._v(" "),s("div",{staticClass:"language-zsh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$ az acr build -r <ACR_NAME> -t <ACR_NAME>.azurecr.io/adc-contacts-api:2.0 -f ./Adc.Scm.Api/Dockerfile .\n")])])]),s("ol",{attrs:{start:"2"}},[s("li",[e._v("Resources API: Folder "),s("code",[e._v("day7/apps/dotnetcore/Scm.Resources/Adc.Scm.Resources.Api")]),e._v(":")])]),e._v(" "),s("div",{staticClass:"language-zsh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$ az acr build -r <ACR_NAME> -t <ACR_NAME>.azurecr.io/adc-resources-api:2.0 .\n")])])]),s("ol",{attrs:{start:"3"}},[s("li",[e._v("Image Resizer Function: Folder "),s("code",[e._v("day7/apps/dotnetcore/Scm.Resources/Adc.Scm.Resources.ImageResizer")]),e._v(":")])]),e._v(" "),s("div",{staticClass:"language-zsh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$ az acr build -r <ACR_NAME> -t <ACR_NAME>.azurecr.io/adc-resources-func:2.0 .\n")])])]),s("ol",{attrs:{start:"4"}},[s("li",[e._v("Search API: Folder "),s("code",[e._v("day7/apps/dotnetcore/Scm.Search/Adc.Scm.Search.Api")]),e._v(":")])]),e._v(" "),s("div",{staticClass:"language-zsh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$ az acr build -r <ACR_NAME> -t <ACR_NAME>.azurecr.io/adc-search-api:2.0 .\n")])])]),s("ol",{attrs:{start:"5"}},[s("li",[e._v("Search Indexer Function: Folder "),s("code",[e._v("day7/apps/dotnetcore/Scm.Search/Adc.Scm.Search.Indexer")]),e._v(":")])]),e._v(" "),s("div",{staticClass:"language-zsh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$ az acr build -r <ACR_NAME> -t <ACR_NAME>.azurecr.io/adc-search-func:2.0 .\n")])])]),s("ol",{attrs:{start:"6"}},[s("li",[e._v("Visit Reports API: Folder "),s("code",[e._v("day7/apps/nodejs/visitreport")]),e._v(":")])]),e._v(" "),s("div",{staticClass:"language-zsh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$ az acr build -r <ACR_NAME> -t <ACR_NAME>.azurecr.io/adc-visitreports-api:2.0 .\n")])])]),s("ol",{attrs:{start:"7"}},[s("li",[e._v("Text Analytics Function: Folder "),s("code",[e._v("day7/apps/nodejs/textanalytics")]),e._v(":")])]),e._v(" "),s("div",{staticClass:"language-zsh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$ az acr build -r <ACR_NAME> -t <ACR_NAME>.azurecr.io/adc-textanalytics-func:2.0 .\n")])])]),s("ol",{attrs:{start:"8"}},[s("li",[e._v("Frontend / UI: Folder "),s("code",[e._v("day7/apps/frontend/scmfe")]),e._v(":")])]),e._v(" "),s("div",{staticClass:"language-zsh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$ az acr build -r <ACR_NAME> -t <ACR_NAME>.azurecr.io/adc-frontend-ui:2.0 .\n")])])]),s("p",[e._v("Now, all images are present in your container registry. You can check the repositories in the portal, if you want:")]),e._v(" "),s("p",[s("img",{attrs:{src:a(752),alt:"acr_portal"}})]),e._v(" "),s("h2",{attrs:{id:"deploy-backend-apis"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#deploy-backend-apis"}},[e._v("#")]),e._v(" Deploy Backend APIs")]),e._v(" "),s("p",[e._v("We are now all set to deploy the services to the Kubernetes cluster.")]),e._v(" "),s("p",[s("strong",[e._v("But first")]),e._v(", we need to do some clean-up. We created ingress definitions in "),s("code",[e._v("Challenge 2")]),e._v(" that would now interfere with the ones we will be creating in this challenge. So let's cleanup these "),s("strong",[e._v("OLD INGRESS definitions")]),e._v(":")]),e._v(" "),s("div",{staticClass:"language-zsh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$ kubectl delete ingress ing-frontend -n default\n$ kubectl delete ingress ing-contacts -n default\n")])])]),s("p",[e._v("We are ready to deploy the API services (contacts, resources, search, visitreport APIs) to the cluster now. For each of these services, that includes a "),s("code",[e._v("Deployment")]),e._v(", a "),s("code",[e._v("ClusterIP Service")]),e._v(" and an "),s("code",[e._v("Ingress")]),e._v(" definition.")]),e._v(" "),s("p",[s("strong",[e._v("For each service, you need to adjust some variables in the predefined YAML manifests. So please carefully read the hints in each API section.")])]),e._v(" "),s("h3",{attrs:{id:"contacts-api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#contacts-api"}},[e._v("#")]),e._v(" Contacts API")]),e._v(" "),s("p",[e._v("Go to folder "),s("code",[e._v("day7/challenges/samples/challenge-4/2_apis")]),e._v(" and adjust the "),s("code",[e._v("ca-deploy.yaml")]),e._v(" and "),s("code",[e._v("ca-ingress.yaml")]),e._v(" as described below:")]),e._v(" "),s("p",[e._v("Settings to adjust:")]),e._v(" "),s("table",[s("thead",[s("tr",[s("th",[e._v("File")]),e._v(" "),s("th",[e._v("Setting")]),e._v(" "),s("th",[e._v("Hint")])])]),e._v(" "),s("tbody",[s("tr",[s("td",[e._v("ca-deploy.yaml")]),e._v(" "),s("td",[e._v("<ACR_NAME>")]),e._v(" "),s("td",[e._v("Replace with the name of your Azure Container Registry, e.g. in our case here "),s("code",[e._v("adccontainerreg")])])]),e._v(" "),s("tr",[s("td",[e._v("ca-ingress.yaml")]),e._v(" "),s("td",[e._v("#{YOUR_HOST_NAME}#")]),e._v(" "),s("td",[e._v("Replace with the nip.io domain name, e.g. "),s("code",[e._v("20-67-122-249.nip.io")])])])])]),e._v(" "),s("br"),e._v(" "),s("p",[e._v("Now apply the definitions in the mentioned path.")]),e._v(" "),s("div",{staticClass:"language-zsh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$ kubectl apply -f 1_contactsapi\n\ndeployment.apps/ca-deploy created\ningress.extensions/ing-contacts created\nservice/contactsapi created\n")])])]),s("h3",{attrs:{id:"resources-api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#resources-api"}},[e._v("#")]),e._v(" Resources API")]),e._v(" "),s("p",[e._v("Go to folder "),s("code",[e._v("day7/challenges/samples/challenge-4/2_apis")]),e._v("and adjust the "),s("code",[e._v("resources-deploy.yaml")]),e._v(" and "),s("code",[e._v("resources-ingress.yaml")]),e._v(" as described below:")]),e._v(" "),s("p",[e._v("Settings to adjust:")]),e._v(" "),s("table",[s("thead",[s("tr",[s("th",[e._v("File")]),e._v(" "),s("th",[e._v("Setting")]),e._v(" "),s("th",[e._v("Hint")])])]),e._v(" "),s("tbody",[s("tr",[s("td",[e._v("resources-deploy.yaml")]),e._v(" "),s("td",[e._v("<ACR_NAME>")]),e._v(" "),s("td",[e._v("Replace with the name of your Azure Container Registry, e.g. in our case here "),s("code",[e._v("adccontainerreg")])])]),e._v(" "),s("tr",[s("td",[e._v("resources-ingress.yaml")]),e._v(" "),s("td",[e._v("#{YOUR_HOST_NAME}#")]),e._v(" "),s("td",[e._v("Replace with the nip.io domain name, e.g. "),s("code",[e._v("20-67-122-249.nip.io")])])])])]),e._v(" "),s("br"),e._v(" "),s("p",[e._v("Now apply the definitions in the mentioned path.")]),e._v(" "),s("div",{staticClass:"language-zsh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$ kubectl apply -f 2_resourcesapi\n\ndeployment.apps/resources-deploy created\ningress.extensions/ing-resources created\nservice/resourcesapi created\n")])])]),s("h3",{attrs:{id:"search-api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#search-api"}},[e._v("#")]),e._v(" Search API")]),e._v(" "),s("p",[e._v("Go to folder "),s("code",[e._v("day7/challenges/samples/challenge-4/2_apis")]),e._v(" and adjust the "),s("code",[e._v("search-deploy.yaml")]),e._v(" and "),s("code",[e._v("search-ingress.yaml")]),e._v(" as described below:")]),e._v(" "),s("p",[e._v("Settings to adjust:")]),e._v(" "),s("table",[s("thead",[s("tr",[s("th",[e._v("File")]),e._v(" "),s("th",[e._v("Setting")]),e._v(" "),s("th",[e._v("Hint")])])]),e._v(" "),s("tbody",[s("tr",[s("td",[e._v("search-deploy.yaml")]),e._v(" "),s("td",[e._v("<ACR_NAME>")]),e._v(" "),s("td",[e._v("Replace with the name of your Azure Container Registry, e.g. in our case here "),s("code",[e._v("adccontainerreg")])])]),e._v(" "),s("tr",[s("td",[e._v("search-ingress.yaml")]),e._v(" "),s("td",[e._v("#{YOUR_HOST_NAME}#")]),e._v(" "),s("td",[e._v("Replace with the nip.io domain name, e.g. "),s("code",[e._v("20-67-122-249.nip.io")])])])])]),e._v(" "),s("br"),e._v(" "),s("p",[e._v("Now apply the definitions in the mentioned path.")]),e._v(" "),s("div",{staticClass:"language-zsh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$ kubectl apply -f 3_searchapi\n\ndeployment.apps/search-deploy created\ningress.extensions/ing-search created\nservice/searchapi created\n")])])]),s("h3",{attrs:{id:"visit-reports-api"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#visit-reports-api"}},[e._v("#")]),e._v(" Visit Reports API")]),e._v(" "),s("p",[e._v("Go to folder "),s("code",[e._v("day7/challenges/samples/challenge-4/2_apis")]),e._v(" and adjust the "),s("code",[e._v("visitreports-deploy.yaml")]),e._v(" and "),s("code",[e._v("visitreports-ingress.yaml")]),e._v(" as described below:")]),e._v(" "),s("p",[e._v("Settings to adjust:")]),e._v(" "),s("table",[s("thead",[s("tr",[s("th",[e._v("File")]),e._v(" "),s("th",[e._v("Setting")]),e._v(" "),s("th",[e._v("Hint")])])]),e._v(" "),s("tbody",[s("tr",[s("td",[e._v("visitreports-deploy.yaml")]),e._v(" "),s("td",[e._v("<ACR_NAME>")]),e._v(" "),s("td",[e._v("Replace with the name of your Azure Container Registry, e.g. in our case here "),s("code",[e._v("adccontainerreg")])])]),e._v(" "),s("tr",[s("td",[e._v("visitreports-ingress.yaml")]),e._v(" "),s("td",[e._v("#{YOUR_HOST_NAME}#")]),e._v(" "),s("td",[e._v("Replace with the nip.io domain name, e.g. "),s("code",[e._v("20-67-122-249.nip.io")])])])])]),e._v(" "),s("br"),e._v(" "),s("p",[e._v("Now apply the definitions in the mentioned path.")]),e._v(" "),s("div",{staticClass:"language-zsh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$ kubectl apply -f 4_visitreports\n\ndeployment.apps/visitreports-deploy created\ningress.extensions/ing-visitreports created\nservice/visitreportapi created\n")])])]),s("h2",{attrs:{id:"deploy-functions-daemon-services"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#deploy-functions-daemon-services"}},[e._v("#")]),e._v(" Deploy Functions / Daemon Services")]),e._v(" "),s("p",[e._v("Next, we deploy the background/daemon services. For each of these background services, that only includes a "),s("code",[e._v("Deployment")]),e._v(" as they won't be called directly (most of them listen for messages of the Azure Service Bus we already created)...so, same procedure:")]),e._v(" "),s("p",[s("strong",[e._v("For each service, you need to adjust some variables in the predefined YAML manifest. So please carefully read the hints in each API section.")])]),e._v(" "),s("h3",{attrs:{id:"resources-image-resizer"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#resources-image-resizer"}},[e._v("#")]),e._v(" Resources / Image Resizer")]),e._v(" "),s("p",[e._v("Go to folder "),s("code",[e._v("day7/challenges/samples/challenge-4/3_functions")]),e._v(" and adjust the "),s("code",[e._v("resources-function-deploy.yaml")]),e._v(" as described below:")]),e._v(" "),s("p",[e._v("Settings to adjust:")]),e._v(" "),s("table",[s("thead",[s("tr",[s("th",[e._v("File")]),e._v(" "),s("th",[e._v("Setting")]),e._v(" "),s("th",[e._v("Hint")])])]),e._v(" "),s("tbody",[s("tr",[s("td",[e._v("resources-function-deploy.yaml")]),e._v(" "),s("td",[e._v("<ACR_NAME>")]),e._v(" "),s("td",[e._v("Replace with the name of your Azure Container Registry, e.g. in our case here "),s("code",[e._v("adccontainerreg")])])])])]),e._v(" "),s("br"),e._v(" "),s("p",[e._v("Now apply the definitions in the mentioned path.")]),e._v(" "),s("div",{staticClass:"language-zsh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$ kubectl apply -f 1_resourcesfunc\n\ndeployment.apps/resources-function-deploy created\n")])])]),s("h3",{attrs:{id:"search-contacts-indexer"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#search-contacts-indexer"}},[e._v("#")]),e._v(" Search / Contacts Indexer")]),e._v(" "),s("p",[e._v("Go to folder "),s("code",[e._v("day7/challenges/samples/challenge-4/3_functions")]),e._v(" and adjust the "),s("code",[e._v("search-function-deploy.yaml")]),e._v(" as described below:")]),e._v(" "),s("p",[e._v("Settings to adjust:")]),e._v(" "),s("table",[s("thead",[s("tr",[s("th",[e._v("File")]),e._v(" "),s("th",[e._v("Setting")]),e._v(" "),s("th",[e._v("Hint")])])]),e._v(" "),s("tbody",[s("tr",[s("td",[e._v("search-function-deploy.yaml")]),e._v(" "),s("td",[e._v("<ACR_NAME>")]),e._v(" "),s("td",[e._v("Replace with the name of your Azure Container Registry, e.g. in our case here "),s("code",[e._v("adccontainerreg")])])])])]),e._v(" "),s("br"),e._v(" "),s("p",[e._v("Now apply the definitions in the mentioned path.")]),e._v(" "),s("div",{staticClass:"language-zsh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$ kubectl apply -f 2_searchfunc\n\ndeployment.apps/search-function-deploy created\n")])])]),s("h3",{attrs:{id:"text-analytics-visit-reports-sentiment-analysis"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#text-analytics-visit-reports-sentiment-analysis"}},[e._v("#")]),e._v(" Text Analytics / Visit Reports Sentiment Analysis")]),e._v(" "),s("p",[e._v("Go to folder "),s("code",[e._v("day7/challenges/samples/challenge-4/3_functions")]),e._v(" and adjust the "),s("code",[e._v("textanalytics-function-deploy.yaml")]),e._v(" as described below:")]),e._v(" "),s("p",[e._v("Settings to adjust:")]),e._v(" "),s("table",[s("thead",[s("tr",[s("th",[e._v("File")]),e._v(" "),s("th",[e._v("Setting")]),e._v(" "),s("th",[e._v("Hint")])])]),e._v(" "),s("tbody",[s("tr",[s("td",[e._v("textanalytics-function-deploy.yaml")]),e._v(" "),s("td",[e._v("<ACR_NAME>")]),e._v(" "),s("td",[e._v("Replace with the name of your Azure Container Registry, e.g. in our case here "),s("code",[e._v("adccontainerreg")])])])])]),e._v(" "),s("br"),e._v(" "),s("p",[e._v("Now apply the definitions in the mentioned path.")]),e._v(" "),s("div",{staticClass:"language-zsh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$ kubectl apply -f 3_textanalyticsfunc\n\ndeployment.apps/textanalytics-function-deploy created\n")])])]),s("h2",{attrs:{id:"deploy-ui"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#deploy-ui"}},[e._v("#")]),e._v(" Deploy UI")]),e._v(" "),s("p",[e._v("Last, but not least, we also need to deploy the VueJS Single Page Application.")]),e._v(" "),s("p",[e._v("Go to folder "),s("code",[e._v("day7/challenges/samples/challenge-4/4_frontend")]),e._v(" and adjust the "),s("code",[e._v("ui-deploy.yaml")]),e._v(" and "),s("code",[e._v("ui-ingress.yaml")]),e._v(" as described below:")]),e._v(" "),s("p",[e._v("Settings to adjust:")]),e._v(" "),s("table",[s("thead",[s("tr",[s("th",[e._v("File")]),e._v(" "),s("th",[e._v("Setting")]),e._v(" "),s("th",[e._v("Hint")])])]),e._v(" "),s("tbody",[s("tr",[s("td",[e._v("ui-deploy.yaml")]),e._v(" "),s("td",[e._v("<ACR_NAME>")]),e._v(" "),s("td",[e._v("Replace with the name of your Azure Container Registry, e.g. in our case here "),s("code",[e._v("adccontainerreg")])])]),e._v(" "),s("tr",[s("td",[e._v("ui-ingress.yaml")]),e._v(" "),s("td",[e._v("#{YOUR_HOST_NAME}#")]),e._v(" "),s("td",[e._v("Replace with the nip.io domain name, e.g. "),s("code",[e._v("20-67-122-249.nip.io")])])])])]),e._v(" "),s("br"),e._v(" "),s("p",[e._v("Now apply the definitions in the mentioned path.")]),e._v(" "),s("div",{staticClass:"language-zsh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$ kubectl apply -f 1_ui\n\ndeployment.apps/frontend-deploy created\ningress.extensions/ing-frontend created\nservice/frontend created\n")])])]),s("h2",{attrs:{id:"check"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#check"}},[e._v("#")]),e._v(" Check")]),e._v(" "),s("p",[e._v("That was a lot of manual typing and, of course, errors happen when doing so. So, let's check the state of the cluster:")]),e._v(" "),s("div",{staticClass:"language-zsh extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("$ kubectl get deployment,pods,service,endpoints,ingress\nNAME                                            READY   UP-TO-DATE   AVAILABLE   AGE\ndeployment.apps/ca-deploy                       2/2     2            2           23h\ndeployment.apps/frontend-deploy                 2/2     2            2           22h\ndeployment.apps/resources-deploy                2/2     2            2           23h\ndeployment.apps/resources-function-deploy       2/2     2            2           22h\ndeployment.apps/search-deploy                   2/2     2            2           22h\ndeployment.apps/search-function-deploy          2/2     2            2           22h\ndeployment.apps/textanalytics-function-deploy   2/2     2            2           22h\ndeployment.apps/visitreports-deploy             2/2     2            2           22h\n\nNAME                                                 READY   STATUS    RESTARTS   AGE\npod/ca-deploy-75bcd947f8-gbppf                       1/1     Running   0          23h\npod/ca-deploy-75bcd947f8-mpkdd                       1/1     Running   0          23h\npod/frontend-deploy-76d6fdfd85-mpcnj                 1/1     Running   0          22h\npod/frontend-deploy-76d6fdfd85-xwvfv                 1/1     Running   0          22h\npod/resources-deploy-7567764b6b-fbwmg                1/1     Running   0          23h\npod/resources-deploy-7567764b6b-pkpvg                1/1     Running   0          23h\npod/resources-function-deploy-5f8487bc8f-96nq7       1/1     Running   0          22h\npod/resources-function-deploy-5f8487bc8f-b7b5z       1/1     Running   0          22h\npod/search-deploy-656c589d54-fvnf5                   1/1     Running   0          22h\npod/search-deploy-656c589d54-t28m2                   1/1     Running   0          22h\npod/search-function-deploy-85497fb7bc-6mph7          1/1     Running   0          22h\npod/search-function-deploy-85497fb7bc-wzrhx          1/1     Running   0          22h\npod/textanalytics-function-deploy-6884ccdb5b-2fch5   1/1     Running   0          22h\npod/textanalytics-function-deploy-6884ccdb5b-ccnzm   1/1     Running   0          22h\npod/visitreports-deploy-7d774598b6-dk6zs             1/1     Running   0          22h\npod/visitreports-deploy-7d774598b6-zx5ds             1/1     Running   0          22h\n\nNAME                     TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)    AGE\nservice/contactsapi      ClusterIP   10.0.233.94    <none>        8080/TCP   23h\nservice/frontend         ClusterIP   10.0.183.66    <none>        8080/TCP   22h\nservice/resourcesapi     ClusterIP   10.0.64.143    <none>        8080/TCP   23h\nservice/searchapi        ClusterIP   10.0.145.162   <none>        8080/TCP   22h\nservice/visitreportapi   ClusterIP   10.0.148.56    <none>        8080/TCP   22h\n\nNAME                       ENDPOINTS                           AGE\nendpoints/contactsapi      10.244.0.40:5000,10.244.2.25:5000   23h\nendpoints/frontend         10.244.1.19:80,10.244.2.32:80       22h\nendpoints/resourcesapi     10.244.0.41:5000,10.244.2.26:5000   23h\nendpoints/searchapi        10.244.0.42:5000,10.244.2.27:5000   22h\nendpoints/visitreportapi   10.244.1.17:3000,10.244.2.28:3000   22h\n\nNAME                                  HOSTS                  ADDRESS         PORTS   AGE\ningress.extensions/ing-contacts       20-67-122-249.nip.io   20.67.122.249   80      23h\ningress.extensions/ing-frontend       20-67-122-249.nip.io   20.67.122.249   80      22h\ningress.extensions/ing-resources      20-67-122-249.nip.io   20.67.122.249   80      23h\ningress.extensions/ing-search         20-67-122-249.nip.io   20.67.122.249   80      22h\ningress.extensions/ing-visitreports   20-67-122-249.nip.io   20.67.122.249   80      22h\n")])])]),s("p",[e._v("You should no see a similar output, having 8 deployments, 16 pods (each deployment set "),s("code",[e._v("replicas: 2")]),e._v("), 5 services with corresponding endpoints and 5 ingress definitions.")]),e._v(" "),s("p",[e._v("If that is the case, open a browser and navigate to you nip.io domain and give it a try! Create contacts, create visit reports for an existing contact, search via the search bar at the top of the website, have a look at the statistics!")]),e._v(" "),s("h2",{attrs:{id:"monitoring-optional"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#monitoring-optional"}},[e._v("#")]),e._v(" Monitoring (Optional)")]),e._v(" "),s("p",[e._v("In case you missed it, we already created a service that is helping you with monitoring your application running in the Kubernetes cluster: Application Insights! Each service (API, background service, frontend) is communication with Application Insights (via the instrumentation key) and sending telemetry data like, request/response time, errors that may have occured, how your users navigate through the frontend.")]),e._v(" "),s("p",[e._v("Navigate to the Application Insights component in the portal and check the data that is sent to that service:")]),e._v(" "),s("h3",{attrs:{id:"application-map"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#application-map"}},[e._v("#")]),e._v(" Application Map")]),e._v(" "),s("p",[s("img",{attrs:{src:a(753),alt:"map"}}),e._v(" "),s("img",{attrs:{src:a(754),alt:"map"}})]),e._v(" "),s("h3",{attrs:{id:"application-performance"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#application-performance"}},[e._v("#")]),e._v(" Application Performance")]),e._v(" "),s("p",[s("img",{attrs:{src:a(755),alt:"map"}})]),e._v(" "),s("h3",{attrs:{id:"application-user-events-frontend-integration"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#application-user-events-frontend-integration"}},[e._v("#")]),e._v(" Application User Events / Frontend Integration")]),e._v(" "),s("p",[s("img",{attrs:{src:a(756),alt:"map"}})]),e._v(" "),s("h3",{attrs:{id:"application-end2end-transactions"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#application-end2end-transactions"}},[e._v("#")]),e._v(" Application End2End Transactions")]),e._v(" "),s("p",[s("img",{attrs:{src:a(757),alt:"map"}})]),e._v(" "),s("h3",{attrs:{id:"application-dashboard"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#application-dashboard"}},[e._v("#")]),e._v(" Application Dashboard")]),e._v(" "),s("p",[e._v("You can also create an application dashboard by clicking on "),s("code",[e._v("Application Dashboard")]),e._v(" on the overview page of the Application Insights component.")]),e._v(" "),s("p",[s("img",{attrs:{src:a(758),alt:"map"}})]),e._v(" "),s("h2",{attrs:{id:"wrap-up"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#wrap-up"}},[e._v("#")]),e._v(" Wrap-Up")]),e._v(" "),s("p",[e._v("Congratulations, you have successfully deployed a full-blown, microservice-oriented application to your AKS cluster.")])])}),[],!1,null,null,null);t.default=n.exports}}]);